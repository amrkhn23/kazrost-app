// App.jsx
import React, { useState } from "react";
import TechTable from "./TechTable";
import CleverTable from "./CleverTable";

function App() {
  const [techMetrics, setTechMetrics] = useState({ bonus: 0 });
  const [dpMetrics, setDpMetrics] = useState({ bonus: 0, coefDp: 1, completion: 0 });

  const [salesHistory, setSalesHistory] = useState(() => {
    const saved = localStorage.getItem("salesHistory");
    return saved ? JSON.parse(saved) : [];
  });

  const addToHistory = (entry) => {
    setSalesHistory((prev) => {
      const updated = [...prev, entry];
      localStorage.setItem("salesHistory", JSON.stringify(updated));
      return updated;
    });
  };

  const totalBonus = Math.round(techMetrics.bonus + dpMetrics.bonus * dpMetrics.coefDp);

  return (
    <div className="max-w-6xl mx-auto py-6 px-4">
      <TechTable setTechMetrics={setTechMetrics} addToHistory={addToHistory} />
      
      <div className="my-8 border-t pt-6">
        <CleverTable setDpMetrics={setDpMetrics} addToHistory={addToHistory} />
      </div>

      <div className="my-10 border-t pt-6 text-sm">
        <h3 className="text-lg font-semibold mb-2">üìä –°–≤–æ–¥ –ø–æ –±–æ–Ω—É—Å–∞–º</h3>
        <ul className="mb-4">
          <li>–ë–æ–Ω—É—Å—ã –∑–∞ —Ç–µ—Ö–Ω–∏–∫—É: {Math.round(techMetrics.bonus).toLocaleString()} ‚Ç∏</li>
          <li>–ë–æ–Ω—É—Å—ã –∑–∞ –¥–æ–ø. –ø—Ä–æ–¥—É–∫—Ü–∏—é (–±–µ–∑ –ù–î–°): {Math.round(dpMetrics.bonus).toLocaleString()} ‚Ç∏</li>
          <li>–ö–æ—ç—Ñ. –¥–æ–ø. –ø—Ä–æ–¥—É–∫—Ü–∏–∏ (–ö–¥.–ø.): {dpMetrics.coefDp}</li>
          <li className="font-bold">–ò—Ç–æ–≥–æ–≤–∞—è —Å—É–º–º–∞ –±–æ–Ω—É—Å–æ–≤: {totalBonus.toLocaleString()} ‚Ç∏</li>
        </ul>

        <h3 className="text-lg font-semibold mb-2">üìö –ò—Å—Ç–æ—Ä–∏—è –ø—Ä–æ–¥–∞–∂:</h3>
        {salesHistory.length === 0 ? (
          <p className="text-gray-500 italic">–ù–µ—Ç –∑–∞–ø–∏—Å–µ–π</p>
        ) : (
          <table className="w-full border text-xs">
            <thead className="bg-gray-100">
              <tr>
                <th className="border p-1">–¢–∏–ø</th>
                <th className="border p-1">–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ</th>
                <th className="border p-1">–•–æ–∑—è–π—Å—Ç–≤–æ</th>
                <th className="border p-1">–ö–∞–Ω–∞–ª</th>
                <th className="border p-1">–°–µ–∑–æ–Ω</th>
                <th className="border p-1">–ö–æ–ª-–≤–æ / –°—É–º–º–∞</th>
                <th className="border p-1">–ë–æ–Ω—É—Å (‚Ç∏)</th>
              </tr>
            </thead>
            <tbody>
              {salesHistory.map((item, i) => (
                <tr key={i}>
                  <td className="border p-1">{item.type}</td>
                  <td className="border p-1">{item.name}</td>
                  <td className="border p-1">{item.farm}</td>
                  <td className="border p-1">{item.channel}</td>
                  <td className="border p-1">{item.season || "-"}</td>
                  <td className="border p-1 text-right">
                    {(item.qty || item.sum).toLocaleString()}
                  </td>
                  <td className="border p-1 text-right">
                    {Math.round(item.bonus).toLocaleString()}
                  </td>
                </tr>
              ))}
            </tbody>
          </table>
        )}
      </div>
    </div>
  );
}

export default App;
